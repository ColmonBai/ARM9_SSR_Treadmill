#############################################################################
# Makefile for building: nnew
# Generated by qmake (2.01a) (Qt 4.6.2) on: ?? ??? 28 10:11:49 2017
# Project:  nnew.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -Wall $(DEFINES)
INCPATH       = -I"c:/Qt/2010.02.1/qt/include/QtCore" -I"c:/Qt/2010.02.1/qt/include/QtGui" -I"c:/Qt/2010.02.1/qt/include" -I"." -I"release" -I"." -I"c:/Qt/2010.02.1/qt/mkspecs/win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s
LIBS        =        -L"c:/Qt/2010.02.1/qt/lib" -lQtGui4 -lQtCore4 
QMAKE         = c:/qt/2010.02.1/qt/bin/qmake.exe
IDC           = c:/Qt/2010.02.1/qt/bin/idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = dcm.cpp \
		dialog1.cpp \
		main.cpp \
		mydialog.cpp \
		tcp.cpp \
		widget.cpp release/moc_dialog1.cpp \
		release/moc_mydialog.cpp \
		release/moc_widget.cpp \
		release/qrc_rec.cpp
OBJECTS       = release/dcm.o \
		release/dialog1.o \
		release/main.o \
		release/mydialog.o \
		release/tcp.o \
		release/widget.o \
		release/moc_dialog1.o \
		release/moc_mydialog.o \
		release/moc_widget.o \
		release/qrc_rec.o
DIST          = 
QMAKE_TARGET  = nnew
DESTDIR        = release/ #avoid trailing-slash linebreak
TARGET         = nnew.exe
DESTDIR_TARGET = release/nnew.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET): ui_dialog1.h ui_mydialog.h ui_widget.h $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.nnew.Release  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec c:/Qt/2010.02.1/qt/mkspecs/win32-g++ -unix CONFIG+=debug_and_release -o Makefile.Release nnew.pro

dist:
	$(ZIP) nnew.zip $(SOURCES) $(DIST) nnew.pro c:/Qt/2010.02.1/qt/mkspecs/qconfig.pri c:/Qt/2010.02.1/qt/mkspecs/features/qt_functions.prf c:/Qt/2010.02.1/qt/mkspecs/features/qt_config.prf c:/Qt/2010.02.1/qt/mkspecs/features/exclusive_builds.prf c:/Qt/2010.02.1/qt/mkspecs/features/default_pre.prf c:/Qt/2010.02.1/qt/mkspecs/features/release.prf c:/Qt/2010.02.1/qt/mkspecs/features/debug_and_release.prf c:/Qt/2010.02.1/qt/mkspecs/features/default_post.prf c:/Qt/2010.02.1/qt/mkspecs/features/build_pass.prf c:/Qt/2010.02.1/qt/mkspecs/features/shared.prf c:/Qt/2010.02.1/qt/mkspecs/features/warn_on.prf c:/Qt/2010.02.1/qt/mkspecs/features/qt.prf c:/Qt/2010.02.1/qt/mkspecs/features/unix/thread.prf c:/Qt/2010.02.1/qt/mkspecs/features/moc.prf c:/Qt/2010.02.1/qt/mkspecs/features/resources.prf c:/Qt/2010.02.1/qt/mkspecs/features/uic.prf c:/Qt/2010.02.1/qt/mkspecs/features/yacc.prf c:/Qt/2010.02.1/qt/mkspecs/features/lex.prf c:/Qt/2010.02.1/qt/mkspecs/features/include_source_dir.prf  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release/dcm.o release/dialog1.o release/main.o release/mydialog.o release/tcp.o release/widget.o release/moc_dialog1.o release/moc_mydialog.o release/moc_widget.o release/qrc_rec.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

C:/Qt/2010.02.1/qt/bin/moc.exe:
	(cd $(QTDIR)/src/tools/moc && $(MAKE))

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_dialog1.cpp release/moc_mydialog.cpp release/moc_widget.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release/moc_dialog1.cpp release/moc_mydialog.cpp release/moc_widget.cpp
release/moc_dialog1.cpp: dialog1.h \
		c:/Qt/2010.02.1/qt/bin/moc.exe
	C:/Qt/2010.02.1/qt/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 dialog1.h -o release/moc_dialog1.cpp

release/moc_mydialog.cpp: mydialog.h \
		c:/Qt/2010.02.1/qt/bin/moc.exe
	C:/Qt/2010.02.1/qt/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 mydialog.h -o release/moc_mydialog.cpp

release/moc_widget.cpp: dialog1.h \
		widget.h \
		c:/Qt/2010.02.1/qt/bin/moc.exe
	C:/Qt/2010.02.1/qt/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 widget.h -o release/moc_widget.cpp

compiler_rcc_make_all: release/qrc_rec.cpp
compiler_rcc_clean:
	-$(DEL_FILE) release/qrc_rec.cpp
release/qrc_rec.cpp: rec.qrc
	c:/Qt/2010.02.1/qt/bin/rcc -name rec rec.qrc -o release/qrc_rec.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_dialog1.h ui_mydialog.h ui_widget.h
compiler_uic_clean:
	-$(DEL_FILE) ui_dialog1.h ui_mydialog.h ui_widget.h
ui_dialog1.h: dialog1.ui
	c:/Qt/2010.02.1/qt/bin/uic.exe dialog1.ui -o ui_dialog1.h

ui_mydialog.h: mydialog.ui
	c:/Qt/2010.02.1/qt/bin/uic.exe mydialog.ui -o ui_mydialog.h

ui_widget.h: widget.ui
	c:/Qt/2010.02.1/qt/bin/uic.exe widget.ui -o ui_widget.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 



####### Compile

release/dcm.o: dcm.cpp dcm.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/dcm.o dcm.cpp

release/dialog1.o: dialog1.cpp dialog1.h \
		ui_dialog1.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/dialog1.o dialog1.cpp

release/main.o: main.cpp widget.h \
		dialog1.h \
		mydialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/main.o main.cpp

release/mydialog.o: mydialog.cpp mydialog.h \
		ui_mydialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/mydialog.o mydialog.cpp

release/tcp.o: tcp.cpp tcp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/tcp.o tcp.cpp

release/widget.o: widget.cpp widget.h \
		dialog1.h \
		ui_widget.h \
		dcm.h \
		tcp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/widget.o widget.cpp

release/moc_dialog1.o: release/moc_dialog1.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_dialog1.o release/moc_dialog1.cpp

release/moc_mydialog.o: release/moc_mydialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_mydialog.o release/moc_mydialog.cpp

release/moc_widget.o: release/moc_widget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_widget.o release/moc_widget.cpp

release/qrc_rec.o: release/qrc_rec.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/qrc_rec.o release/qrc_rec.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

